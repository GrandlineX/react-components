"use strict";(self.webpackChunk_grandlinex_react_components=self.webpackChunk_grandlinex_react_components||[]).push([[7856],{"./src/components/mediaPlayer/player/FileAudioPlayer.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>__WEBPACK_DEFAULT_EXPORT__});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/jsx-runtime.js"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/index.js"),_util__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/util/index.tsx");const FileAudiPlayer=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((props,ref)=>{const refX=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);(0,react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle)(ref,()=>({seekTo(to){refX.current&&(refX.current.currentTime=to)},getRawPlayer:()=>refX.current,play(){refX.current&&refX.current.play()},pause(){refX.current&&refX.current.pause()},getDuration:()=>refX.current?refX.current.duration:-1,getCurrentTime:()=>refX.current?refX.current.currentTime:-1,setPlayBackRate(rate){refX.current&&(refX.current.playbackRate=rate)}}));const{playerProps}=props,{className,src,tracks,controls,loop,autoplay,muted,crossorigin,preload,onEnded,onPause,onPlay,onStart,onDurationChange,onProgress,bottomRow}=playerProps,isSimpleSrc="string"==typeof src;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("audio",{controls,className:(0,_util__WEBPACK_IMPORTED_MODULE_2__._m)("glx-media-player",className),ref:refX,src:isSimpleSrc?src:void 0,loop,muted,autoPlay:autoplay,crossOrigin:crossorigin,onProgress:event=>{const target=event.target;onProgress?.({target,currentTime:target.currentTime,duration:target.duration})},onTimeUpdate:event=>{const target=event.target;onProgress?.({target,currentTime:target.currentTime,duration:target.duration})},onDurationChange:event=>{const target=event.target;onDurationChange?.({target,currentTime:target.currentTime,duration:target.duration})},onLoadedMetadata:()=>{onStart?.()},preload,onEnded:()=>{onEnded?.()},onPause:()=>{onPause?.()},onPlay:()=>{onPlay?.()},children:[isSimpleSrc?null:src.map(s=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("source",{src:s.src,type:s.type})),tracks?.map(track=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("track",{default:track.default,kind:track.kind,src:track.src,srcLang:track.srclang,label:track.label}))]}),bottomRow]})}),__WEBPACK_DEFAULT_EXPORT__=FileAudiPlayer;FileAudiPlayer.__docgenInfo={description:"",methods:[{name:"seekTo",docblock:null,modifiers:[],params:[{name:"to",optional:!1,type:{name:"number"}}],returns:null},{name:"getRawPlayer",docblock:null,modifiers:[],params:[],returns:{type:{name:"union",raw:"Y | null",elements:[{name:"Y"},{name:"null"}]}}},{name:"play",docblock:null,modifiers:[],params:[],returns:null},{name:"pause",docblock:null,modifiers:[],params:[],returns:null},{name:"getDuration",docblock:null,modifiers:[],params:[],returns:null},{name:"getCurrentTime",docblock:null,modifiers:[],params:[],returns:null},{name:"setPlayBackRate",docblock:null,modifiers:[],params:[{name:"rate",optional:!1,type:{name:"union",raw:"| 1.0\n| 1.25\n| 1.5\n| 0.5\n| 2.0\n| -1.0\n| -0.5",elements:[{name:"literal",value:"1.0"},{name:"literal",value:"1.25"},{name:"literal",value:"1.5"},{name:"literal",value:"0.5"},{name:"literal",value:"2.0"},{name:"literal",value:"-1.0"},{name:"literal",value:"-0.5"}],alias:"MediaPlayerPlaybackRates"}}],returns:null}],displayName:"FileAudiPlayer",props:{playerProps:{required:!0,tsType:{name:"signature",type:"object",raw:"{\n  // required\n  src: string | MediaPlayerSrc[];\n  tracks?: PlayerTracks[];\n  // optional props\n  className?: string;\n  poster?: string;\n  controls?: boolean;\n  autoplay?: boolean;\n  loop?: boolean;\n  muted?: boolean;\n  preload?: 'none' | 'metadata' | 'auto';\n  width?: string | number;\n  height?: string | number;\n  crossorigin?: 'anonymous' | 'use-credentials';\n  // optional functions\n  onEnded?: () => void;\n  onPause?: () => void;\n  onPlay?: () => void;\n  onStart?: () => void;\n  onDurationChange?: (event: PlayerUpdateEvent<X>) => void;\n  onProgress?: (event: PlayerUpdateEvent<X>) => void;\n  bottomRow?: ReactNode;\n  player?: PlayerType;\n  custom?: Record<string, any>;\n}",signature:{properties:[{key:"src",value:{name:"union",raw:"string | MediaPlayerSrc[]",elements:[{name:"string"},{name:"Array",elements:[{name:"signature",type:"object",raw:"{\n  src: string;\n  type: string;\n}",signature:{properties:[{key:"src",value:{name:"string",required:!0}},{key:"type",value:{name:"string",required:!0}}]}}],raw:"MediaPlayerSrc[]"}],required:!0}},{key:"tracks",value:{name:"Array",elements:[{name:"Partial",elements:[{name:"Pick",elements:[{name:"HTMLTrackElement"},{name:"union",raw:"'default' | 'kind' | 'label' | 'src' | 'srclang'",elements:[{name:"literal",value:"'default'"},{name:"literal",value:"'kind'"},{name:"literal",value:"'label'"},{name:"literal",value:"'src'"},{name:"literal",value:"'srclang'"}]}],raw:"Pick<HTMLTrackElement, 'default' | 'kind' | 'label' | 'src' | 'srclang'>"}],raw:"Partial<\n  Pick<HTMLTrackElement, 'default' | 'kind' | 'label' | 'src' | 'srclang'>\n>"}],raw:"PlayerTracks[]",required:!1}},{key:"className",value:{name:"string",required:!1}},{key:"poster",value:{name:"string",required:!1}},{key:"controls",value:{name:"boolean",required:!1}},{key:"autoplay",value:{name:"boolean",required:!1}},{key:"loop",value:{name:"boolean",required:!1}},{key:"muted",value:{name:"boolean",required:!1}},{key:"preload",value:{name:"union",raw:"'none' | 'metadata' | 'auto'",elements:[{name:"literal",value:"'none'"},{name:"literal",value:"'metadata'"},{name:"literal",value:"'auto'"}],required:!1}},{key:"width",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"height",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"crossorigin",value:{name:"union",raw:"'anonymous' | 'use-credentials'",elements:[{name:"literal",value:"'anonymous'"},{name:"literal",value:"'use-credentials'"}],required:!1}},{key:"onEnded",value:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}},required:!1}},{key:"onPause",value:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}},required:!1}},{key:"onPlay",value:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}},required:!1}},{key:"onStart",value:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}},required:!1}},{key:"onDurationChange",value:{name:"signature",type:"function",raw:"(event: PlayerUpdateEvent<X>) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{\n  target: X;\n  currentTime: number;\n  duration: number;\n}",signature:{properties:[{key:"target",value:{name:"X",required:!0}},{key:"currentTime",value:{name:"number",required:!0}},{key:"duration",value:{name:"number",required:!0}}]}},name:"event"}],return:{name:"void"}},required:!1}},{key:"onProgress",value:{name:"signature",type:"function",raw:"(event: PlayerUpdateEvent<X>) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{\n  target: X;\n  currentTime: number;\n  duration: number;\n}",signature:{properties:[{key:"target",value:{name:"X",required:!0}},{key:"currentTime",value:{name:"number",required:!0}},{key:"duration",value:{name:"number",required:!0}}]}},name:"event"}],return:{name:"void"}},required:!1}},{key:"bottomRow",value:{name:"ReactNode",required:!1}},{key:"player",value:{name:"PlayerType",required:!1}},{key:"custom",value:{name:"Record",elements:[{name:"string"},{name:"any"}],raw:"Record<string, any>",required:!1}}]}},description:""}}}}}]);